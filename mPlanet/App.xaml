<Application x:Class="mPlanet.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:mPlanet"
             xmlns:converters="clr-namespace:mPlanet.Converters"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        
        <!-- Converters -->
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:PhotoVisibilityConverter x:Key="PhotoVisibilityConverter"/>
        <converters:PhotoSourceConverter x:Key="PhotoSourceConverter"/>
        
        <!-- Custom Button Style with rounded corners and hover effects -->
        <!-- This style will be applied to ALL buttons in the application -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="#BDC3C7"/>
            <Setter Property="Foreground" Value="#34495E"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" 
                                BorderThickness="0" 
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button interaction triggers -->
            <Style.Triggers>
                <!-- Hover effect -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#818c94"/>
                </Trigger>
                <!-- Press effect with slight scale -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#818c94"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <!-- Disabled button appearance -->
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#95A5A6"/>
                    <Setter Property="Foreground" Value="#7F8C8D"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Custom TextBox Style -->
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="#BDC3C7"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#34495E"/>
            <Setter Property="Margin" Value="0,5,0,5"/>
            <Style.Triggers>
                <!-- Focus effect -->
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#3498DB"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Custom Label Style -->
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#34495E"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Custom GroupBox Style -->
        <Style TargetType="GroupBox">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#2C3E50"/>
            <Setter Property="BorderBrush" Value="#BDC3C7"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            
                            <!-- Header background -->
                            <Border Grid.Row="0" 
                                    Background="#ECF0F1" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,1,1,0"
                                    CornerRadius="5,5,0,0"
                                    Padding="10,5">
                                <ContentPresenter ContentSource="Header"/>
                            </Border>
                            
                            <!-- Content area -->
                            <Border Grid.Row="1" 
                                    Background="White"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,0,1,1"
                                    CornerRadius="0,0,5,5"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ListView Style for scanned tags -->
        <Style TargetType="ListView">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="AlternationCount" Value="2"/>
        </Style>

        <!-- ListView Item Style with alternating colors -->
        <Style TargetType="ListViewItem">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5,2,5,2"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Style.Triggers>
                <!-- Alternating row colors for better readability -->
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#F8F9FA"/>
                </Trigger>
                <!-- Hover effect -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E3F2FD"/>
                </Trigger>
                <!-- Selection effect -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#3498DB"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- GridViewColumnHeader Style -->
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="#2C3E50"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Border Background="Transparent" 
                                BorderBrush="Transparent" 
                                BorderThickness="0">
                            <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="Center" 
                                Margin="5,5,0,5"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- StatusBar Style -->
        <Style TargetType="StatusBar">
            <Setter Property="Background" Value="#ECF0F1"/>
            <Setter Property="BorderBrush" Value="#BDC3C7"/>
            <Setter Property="BorderThickness" Value="0,1,0,0"/>
        </Style>

        <!-- StatusBarItem Style -->
        <Style TargetType="StatusBarItem">
            <Setter Property="Padding" Value="10,5"/>
        </Style>

        <!-- TextBlock Style for status messages -->
        <Style x:Key="StatusTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#34495E"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- CheckBox Style -->
        <Style TargetType="CheckBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#34495E"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,5"/>
        </Style>

        <!-- ComboBox Style -->
        <Style TargetType="ComboBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#34495E"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#BDC3C7"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Height" Value="30"/>
        </Style>

        <!-- Slider Style -->
        <Style TargetType="Slider">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Background" Value="#ECF0F1"/>
            <Setter Property="Foreground" Value="#3498DB"/>
        </Style>

        <!-- Navigation Button Style (for MainWindow navigation) -->
        <Style x:Key="NavigationButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#34495E"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#1ABC9C"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#7F8C8D"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Page Header TextBlock Style -->
        <Style x:Key="PageHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#34495E"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
        </Style>

        <!-- Section Header TextBlock Style -->
        <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#2C3E50"/>
            <Setter Property="Margin" Value="0,10,0,5"/>
        </Style>

    </Application.Resources>
</Application>